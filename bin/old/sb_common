


################################################################################
# Get env

if [ "$SB_LOCATION" = "manchester" ];
then

  LOCATION="MANCHESTER"

  DEFAULT_SANDBOX=
  
  BASE_DIR=$SB_BASE_DIR

  #Something random only in svc
  SVC_TEST_FILE=src/user/pl/pl_vpd.h
  
  SANDBOX_LIST=$(ls $BASE_DIR)
  SANDBOX_LIST=( $(for x in $SANDBOX_LIST; do if [ -f $BASE_DIR/$x/$SVC_TEST_FILE ]; then echo $x; fi; done) )

  #MACHINE=

  mustBeInHursley()
  {
    echo "Must be in Hursley environment"
    exit 2
  }

  mustBeInManchester() { return; }


  getbackingdir() #sandbox
  {
    #Not a dir for mcr
    #EG: lodestone630 110609
    BOX=$1
    
    REL=$(cat $BASE_DIR/$BOX/src/vrmf 2>/dev/null)
    BUILD=$(cat $BASE_DIR/$BOX/src/version 2>/dev/null)
    
    echo $REL" "$BUILD
  }
  
else

  LOCATION="HURSLEY"

  SANDBOXRC=~/.sandboxrc

  DEFAULT_SANDBOX=$(grep "^default" $SANDBOXRC | awk '{print $2}')

  BASE_DIR=$(grep "^base" $SANDBOXRC | awk '{print $3}')

  SANDBOX_LIST=( $(grep "^sb" $SANDBOXRC | awk '{printf $2" "}') )

  #work needed - understand more about this
  #MACHINE=$(grep "^mksb -m" $SANDBOXRC | awk '{print $3}')

  mustBeInHursley() { return; }
  
  mustBeInManchester()
  {
    echo "Must be in Manchester environment"
    exit 2
  }
  
  getbackingdir() #sandbox
  {
    #EG: /build/lodestone630/110609
    BOX=$1
    grep "backing_build" $BASE_DIR/$BOX/rc_files/sb.conf 2>/dev/null | awk '{printf $3}'
  }

fi

################################################################################
# functions


mustBeInSandbox()
{
  if [ -z "$SANDBOX" ]
  then
    echo "Not in a sandbox"
    exit 2
  fi
}


getrootdir() #sandbox
{
  #EG: /work0/alanh/sandbox/foobah
  #(equivalent of $SANDBOXBASE)
  echo $BASE_DIR/$1
}

validsandbox() #sandbox
{
  return test -d $BASE_DIR/$1
}


getmachine() #sandbox
{
  #EG: svc14
  basename $(ls -d $BASE_DIR/$1/tools/svc* | head -1)
}
