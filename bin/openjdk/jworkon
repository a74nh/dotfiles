#!/bin/bash
################################################################################
#
#  mworkon
#
#  By Alan Hayward
#
#  Presents a menu of your SANDBOX work dirs
#  If you are not in a "workon" session, it asks you to select an entry and opens it
#  If you are in a session, it gives you details of the session
#  When exiting a session started with mworkon, you'll get a helpful exit message
#
################################################################################

SCRIPT_DIR=$(dirname $0)
source $SCRIPT_DIR/jcommon_funcs

################################################################################
# getsandboxinfo function

getsandboxinfo() #sandbox
{
  BOX=$1
  
  CURRENT=""
  if [ "$BOX" = "$SANDBOX" ]
  then
    CURRENT="*"
  fi

  SANDBOX_TYPE="jdk"
  SANDBOXSHORT="[$(basename $BOX)]"
}


getsandboxlist()
{
  SANDBOX_LIST=
  OLD_IFS=$IFS
  IFS=":"
  for DIR in $SANDBOX_JAVA_PATH
  do
    #echo $DIR
    IFS=$OLD_IFS
    for SUBDIR in $(find -L $DIR -mindepth 1 -maxdepth 1 -type d)
    do
      #echo --$SUBDIR
      if [[ -f "$SUBDIR/ASSEMBLY_EXCEPTION" && $SUBDIR != *-orig ]]
      then
        #echo ---$SUBDIR
        SANDBOX_LIST=(${SANDBOX_LIST[@]} $SUBDIR)
      fi
    done
    IFS=":"
  done
  IFS=$OLD_IFS
}


################################################################################
# List work dirs

echo "Sandbox Work Areas ($(hostname))"
echo
getsandboxlist


MAX_BOX_LENGTH=0
for BOX in ${SANDBOX_LIST[@]}
do
  if [ ${#BOX} -gt $MAX_BOX_LENGTH ]
  then
    MAX_BOX_LENGTH=${#BOX}
  fi
done

ITEM=1
for BOX in ${SANDBOX_LIST[@]}
do
  getsandboxinfo $BOX
  printf "%1s%-2.2s%-2s %-*s %s\n" "$CURRENT" "$ITEM" "$DEFAULT" "$MAX_BOX_LENGTH" "$BOX" "$COMMENT"
  ITEM=$((ITEM+1))
done


################################################################################
# User select new sandbox (if not already in a sandbox)

SETTING_SANDBOX=
while [ -z "$SANDBOX" ]
do
  SETTING_SANDBOX=1

  echo
  echo "Enter index to work on:"
  read i;

  SANDBOX=${SANDBOX_LIST[$((i-1))]}
  
  if [ -z "$SANDBOX" ]
  then
    echo "Invalid entry. Enter a number from 1 to ${#SANDBOX_LIST[@]}"
  fi

done


################################################################################
# List selected sandbox

getsandboxinfo $SANDBOX

if [ "$SETTING_SANDBOX" ]
then

  echo "Setting Sandbox to:"
  echo
  echo "Sandbox: $SANDBOX  [$SANDBOX_TYPE]"
  echo "Comment: $COMMENT"
  echo

  export SANDBOX
  export SANDBOX_TYPE
  export SANDBOXSHORT

  echo "Changing directory to: $SANDBOX"
  echo "Spawning new shell ($SHELL)..."
  cd $SANDBOX
  _JH_BACKUP=
  if [[ -z "$LOCALMACHINE" ]];
  then
    _JH_BACKUP=$JAVA_HOME
    jhome ad
  fi
  ZDOTDIR="$SCRIPT_DIR" $SHELL
  
  echo "***EXITING WORKING ON $SANDBOX***"

  if [[ -n "$_JH_BACKUP" ]];
  then
    export JAVA_HOME=$_JH_BACKUP
  else
    unset JAVA_HOME
  fi

else
  echo "Sandbox currently set to: $SANDBOX"
fi

exit 0
